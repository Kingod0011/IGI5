# Generated by Django 5.0.4 on 2024-05-10 21:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+375XXXXXXXXX'. Up to 9 digits allowed.", regex='^\\+375\\d{9}$')])),
                ('city', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField()),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employees/')),
                ('description', models.TextField()),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+375XXXXXXXXX'. Up to 9 digits allowed.", regex='^\\+375\\d{9}$')])),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField()),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('busy_until', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PickupPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['address'],
            },
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('discount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('times_used', models.PositiveIntegerField(default=0)),
                ('usage_limit', models.PositiveIntegerField()),
                ('valid_until', models.DateTimeField()),
                ('is_valid', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(editable=False, max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('production_time', models.DurationField()),
                ('is_producing', models.BooleanField(default=True)),
                ('product_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='factory.productmodel')),
                ('product_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='factory.producttype')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('completion_date', models.DateTimeField()),
                ('client_name', models.CharField(max_length=100, null=True)),
                ('product_name', models.CharField(max_length=100, null=True)),
                ('quantity', models.IntegerField()),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='factory.client')),
                ('pickup_point', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='factory.pickuppoint')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='factory.product')),
                ('promo_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='factory.promocode')),
            ],
            options={
                'ordering': ['completion_date'],
            },
        ),
    ]
